{"version":3,"sources":["App.tsx","components/GoodsList.tsx","index.tsx"],"names":["SortType","GoodsList","goods","map","good","goodsFromServer","App","useState","isReversed","setIsReverse","NONE","sortType","setSortType","isReset","finishGoods","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","useEffect","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MADuC,OAGvC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SDLjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8BE,IAAMM,EAAgB,WAC3B,MAAmCC,oBAAS,GAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASP,EAASU,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAAUL,GAAcG,IAAaX,EAASU,KAE9CI,EA/CD,SACLZ,EACAS,EAAoBH,GAEpB,IAAMO,EAAY,YAAOb,GAazB,OAXAa,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQP,GACN,KAAKX,EAASmB,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKlB,EAASqB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAO,MAITd,EACKO,EAAaQ,UAGfR,EA0BaS,CAAkBnB,EAAiBM,EAAUH,GAIjE,OAFAiB,qBAAU,cAAW,CAACjB,EAAYG,IAGhC,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYjB,IAAaX,EAASmB,WAGtCU,QA9Be,WACrBjB,EAAYZ,EAASmB,WAqBjB,iCAaA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYjB,IAAaX,EAASqB,SAGtCQ,QAvCa,WACnBjB,EAAYZ,EAASqB,SA8BjB,4BAaA,wBACEM,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAapB,IAGjBqB,QA5DQ,WACdpB,GAAcD,IAmDV,qBAaCK,GACC,wBACEc,KAAK,SACLD,UAAWE,IACT,mBACA,CACE,YAAaf,IAGjBgB,QA9DI,WACZpB,GAAa,GACbG,EAAYZ,EAASU,OAoDf,sBAeJ,cAAC,EAAD,CAAWR,MAAOY,QEnIxBgB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5c0b6898.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType, isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reverse = () => {\n    setIsReverse(!isReversed);\n  };\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reset = () => {\n    setIsReverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  const isReset = isReversed || sortType !== SortType.NONE;\n\n  const finishGoods = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  useEffect(() => { }, [isReversed, sortType]);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-danger',\n              {\n                'is-light': !isReset,\n              },\n            )}\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={finishGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[],\n};\n\nexport const GoodsList:React.FC<Props> = ({\n  goods,\n}) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}